const months = [
  "January",
  "February",
  "March",
  "April",
  "May",
  "June",
  "July",
  "August",
  "September",
  "October",
  "November",
  "December",
];
const days = [
  "Sunday",
  "Monday",
  "Tuseday",
  "Wednesday",
  "Thursday",
  "Friday",
  "Saturday",
];

window.addEventListener("load", () => {
  let location = document.getElementById("location");
  setInterval(() => {
    const today = new Date();
    const hours =
      today.getHours("hH") >= 13 ? today.getHours() - 12 : today.getHours();

    const chours = hours < 10 ? "0" + hours : hours;
    const minutes =
      today.getMinutes() < 10 ? "0" + today.getMinutes() : today.getMinutes();
    const seconds =
      today.getSeconds() < 10 ? "0" + today.getSeconds() : today.getSeconds();
    const ma = today.getHours() >= 13 ? "PM" : "AM";
    const time = chours + ":" + minutes + ":" + seconds;
    document.querySelector(".time").innerHTML = time;
    const date =
      days[today.getDay()] +
      ", " +
      today.getDate() +
      " " +
      months[today.getMonth()] +
      ", " +
      today.getFullYear();
    document.querySelector(".date").innerHTML = date;
  }, 1);

  const checkError = (error) => {
    switch (error.code) {
      case error.PERMISSION_DENIED:
        location.innerHTML = "Please allow access to location";

      case error.POSITION_UNAVAILABLE:
        location.innerHTML = "Location information unavailable";

      case error.TIMEOUT:
        location.innerHTML = "The request to get user location timed out";
    }
  };

  const showLocation = async (position) => {
    let response = await fetch(
      `https://nominatim.openstreetmap.org/reverse?lat=${position.coords.latitude}&lon=${position.coords.longitude}&format=json`
    );

    let data = await response.json();

    location.innerHTML = `${data.address.city}, ${data.address.country}`;
  };

  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(showLocation, checkError);
  } else {
    location.innerHTML = "The browser does not support geolocation";
  }
  const toggle = document.querySelector(".toggle");
  toggle.addEventListener("click", () => {
    var element = document.body;
    var path = document.querySelector(".path");
    element.classList.toggle("dark-mode");
    path.classList.toggle("p-dark-mode");
    if (
      path.getAttribute("d") ==
      "M25.0149 13.2059C24.8368 13.0587 24.621 12.9645 24.3919 12.9339C24.1629 12.9034 23.9298 12.9378 23.7194 13.0332C22.4147 13.6302 20.9961 13.9375 19.5612 13.9339C16.907 13.9307 14.3616 12.8783 12.4802 11.0061C10.5987 9.13384 9.53373 6.59371 9.51745 3.93951C9.52307 3.10767 9.62661 2.27938 9.82592 1.47175C9.86821 1.25649 9.85235 1.03384 9.77996 0.82675C9.70758 0.619657 9.58128 0.435608 9.4141 0.293564C9.24692 0.151519 9.04488 0.0566175 8.82882 0.0186347C8.61275 -0.019348 8.39046 0.000962081 8.18486 0.0774727C6.25054 0.947243 4.56907 2.29445 3.29841 3.99255C2.02774 5.69064 1.2096 7.68387 0.920836 9.78499C0.632071 11.8861 0.882162 14.0262 1.64762 16.0041C2.41307 17.982 3.66876 19.7329 5.29672 21.0922C6.92469 22.4516 8.87148 23.3748 10.9542 23.7751C13.037 24.1754 15.1873 24.0397 17.2032 23.3808C19.2191 22.7218 21.0344 21.5612 22.4786 20.008C23.9228 18.4548 24.9484 16.56 25.4591 14.5015C25.5214 14.2658 25.5124 14.017 25.4333 13.7864C25.3543 13.5559 25.2087 13.3539 25.0149 13.2059ZM13.2931 21.4606C11.2224 21.446 9.20676 20.7916 7.52226 19.5872C5.83776 18.3828 4.56672 16.6871 3.88317 14.7324C3.19962 12.7777 3.13699 10.6594 3.70384 8.66773C4.27068 6.67603 5.4393 4.90822 7.04969 3.60636V3.93951C7.05296 7.25677 8.37218 10.4372 10.7178 12.7829C13.0635 15.1285 16.244 16.4478 19.5612 16.451C20.4322 16.4542 21.301 16.3632 22.1524 16.1796C21.3009 17.7904 20.0257 19.1382 18.4645 20.0776C16.9032 21.0169 15.1152 21.5122 13.2931 21.5099V21.4606Z"
    ) {
      path.setAttribute(
        "d",
        "M23.3 11.0388H22.124C21.4604 11.0388 20.924 11.4696 20.924 12C20.924 12.5292 21.4604 12.9588 22.124 12.9588H23.3C23.9624 12.9588 24.5 12.5304 24.5 12C24.5 11.4708 23.9612 11.0388 23.3 11.0388ZM12.5 5.4C11.6325 5.39731 10.7731 5.56618 9.97111 5.89691C9.16914 6.22764 8.44049 6.71369 7.82709 7.32709C7.21369 7.94049 6.72764 8.66914 6.39691 9.47111C6.06618 10.2731 5.89731 11.1325 5.9 12C5.9 15.6612 8.8388 18.6 12.5 18.6C16.16 18.6 19.1 15.6612 19.1 12C19.1 8.3388 16.1588 5.4 12.5 5.4ZM12.5 16.8C9.8468 16.8 7.7 14.6508 7.7 12C7.7 9.3468 9.8468 7.2 12.5 7.2C13.773 7.2 14.9939 7.70571 15.8941 8.60589C16.7943 9.50606 17.3 10.727 17.3 12C17.3 13.273 16.7943 14.4939 15.8941 15.3941C14.9939 16.2943 13.773 16.8 12.5 16.8ZM4.1 12C4.1 11.4708 3.5612 11.0388 2.9 11.0388H1.7C1.0364 11.0388 0.5 11.4696 0.5 12C0.5 12.5292 1.0364 12.9588 1.7 12.9588H2.9C3.5612 12.9588 4.1 12.5292 4.1 12ZM12.5 3.6C13.0292 3.6 13.4588 3.0636 13.4588 2.4V1.2C13.4588 0.5364 13.0292 0 12.5 0C11.9696 0 11.5388 0.5364 11.5388 1.2V2.4C11.5388 3.0636 11.9696 3.6 12.5 3.6ZM12.5 20.4C11.9696 20.4 11.5388 20.9364 11.5388 21.6V22.8C11.5388 23.4636 11.9696 24 12.5 24C13.0292 24 13.4588 23.4636 13.4588 22.8V21.6C13.4588 20.9364 13.0292 20.4 12.5 20.4ZM21.338 4.5192C21.8072 4.05 21.8828 3.366 21.5084 2.9916C21.134 2.6172 20.4488 2.694 19.982 3.1632L19.142 4.002C18.6728 4.4712 18.5972 5.1552 18.9716 5.5296C19.346 5.904 20.0312 5.8272 20.4992 5.358L21.338 4.5192ZM4.5008 18.6396L3.6608 19.4808C3.1916 19.95 3.116 20.6316 3.4904 21.006C3.8648 21.3804 4.55 21.306 5.0168 20.8368L5.8568 19.998C6.326 19.5288 6.4016 18.8448 6.0272 18.4692C5.6528 18.0936 4.9676 18.1728 4.5008 18.6396ZM5.018 3.162C4.55 2.6928 3.8648 2.616 3.4904 2.9904C3.116 3.3648 3.1928 4.05 3.6596 4.5192L4.4996 5.358C4.9688 5.8272 5.6516 5.904 6.026 5.5296C6.4004 5.1552 6.3248 4.47 5.8568 4.002L5.018 3.162ZM19.1408 19.9992L19.9808 20.838C20.45 21.3072 21.1328 21.3816 21.5072 21.0096C21.8816 20.6352 21.806 19.95 21.3368 19.482L20.498 18.6432C20.0288 18.174 19.3448 18.0972 18.9692 18.4716C18.5936 18.846 18.6716 19.53 19.1408 19.9992Z"
      );
    } else {
      path.setAttribute(
        "d",
        "M25.0149 13.2059C24.8368 13.0587 24.621 12.9645 24.3919 12.9339C24.1629 12.9034 23.9298 12.9378 23.7194 13.0332C22.4147 13.6302 20.9961 13.9375 19.5612 13.9339C16.907 13.9307 14.3616 12.8783 12.4802 11.0061C10.5987 9.13384 9.53373 6.59371 9.51745 3.93951C9.52307 3.10767 9.62661 2.27938 9.82592 1.47175C9.86821 1.25649 9.85235 1.03384 9.77996 0.82675C9.70758 0.619657 9.58128 0.435608 9.4141 0.293564C9.24692 0.151519 9.04488 0.0566175 8.82882 0.0186347C8.61275 -0.019348 8.39046 0.000962081 8.18486 0.0774727C6.25054 0.947243 4.56907 2.29445 3.29841 3.99255C2.02774 5.69064 1.2096 7.68387 0.920836 9.78499C0.632071 11.8861 0.882162 14.0262 1.64762 16.0041C2.41307 17.982 3.66876 19.7329 5.29672 21.0922C6.92469 22.4516 8.87148 23.3748 10.9542 23.7751C13.037 24.1754 15.1873 24.0397 17.2032 23.3808C19.2191 22.7218 21.0344 21.5612 22.4786 20.008C23.9228 18.4548 24.9484 16.56 25.4591 14.5015C25.5214 14.2658 25.5124 14.017 25.4333 13.7864C25.3543 13.5559 25.2087 13.3539 25.0149 13.2059ZM13.2931 21.4606C11.2224 21.446 9.20676 20.7916 7.52226 19.5872C5.83776 18.3828 4.56672 16.6871 3.88317 14.7324C3.19962 12.7777 3.13699 10.6594 3.70384 8.66773C4.27068 6.67603 5.4393 4.90822 7.04969 3.60636V3.93951C7.05296 7.25677 8.37218 10.4372 10.7178 12.7829C13.0635 15.1285 16.244 16.4478 19.5612 16.451C20.4322 16.4542 21.301 16.3632 22.1524 16.1796C21.3009 17.7904 20.0257 19.1382 18.4645 20.0776C16.9032 21.0169 15.1152 21.5122 13.2931 21.5099V21.4606Z"
      );
    }
  });
});
